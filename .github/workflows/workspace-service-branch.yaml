name: workspace-service-branch

on:
  pull_request:
    branches:
      - master
    paths:
      - rust-toolchain
      - workspace-service/**
      - event-models/**
      - infrastructure/dev-overlay-variables.json
      - .github/workflows/deploy-branch.sh
      - .github/workflows/workspace-service-branch.yaml

jobs:
  ci:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Clone Platform repo
        uses: actions/checkout@v2
        with:
          path: futurenhs-platform

      - name: Make toolchain version available in current directory
        run: cp futurenhs-platform/rust-toolchain .

      - uses: actions-rs/toolchain@v1
        with:
          components: clippy

      - name: Cache sqlx
        id: cache-sqlx
        uses: actions/cache@v2.1.4
        with:
          path: |
            ~/.cargo/bin/sqlx
            ~/.cargo/bin/cargo-sqlx
          key: sqlx-0.1.0-beta.1-144dcceb445e804b16258d0dd9e580d6a484a01e

      - name: Install sqlx
        if: steps.cache-sqlx.outputs.cache-hit != 'true'
        run: cargo install --git https://github.com/launchbadge/sqlx --rev 144dcceb445e804b16258d0dd9e580d6a484a01e sqlx-cli

      - name: Cache cargo
        uses: actions/cache@v2.1.4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            futurenhs-platform/workspace-service/target
          key: cargo-${{ hashFiles('futurenhs-platform/workspace-service/Cargo.lock') }}-1

      - name: Build
        working-directory: futurenhs-platform/workspace-service
        run: |
          set -e
          export DATABASE_URL=postgres://postgres:postgres@localhost:5432
          sqlx migrate run
          cargo sqlx prepare --check -- --release --bin workspace_service
          export SQLX_OFFLINE=true
          cargo clippy --release -- -D warnings
          cargo build --release
          export TEST_DATABASE_URL=$DATABASE_URL
          cargo test --release

      - name: Test dev overlay creation
        run: $GITHUB_WORKSPACE/futurenhs-platform/infrastructure/scripts/create-dev-overlays.py

      - name: Build image
        working-directory: futurenhs-platform/workspace-service
        run: |
          TAG="$(git rev-parse --short=7 ${{ github.sha }})"
          echo "TAG=$TAG" >>$GITHUB_ENV
          make docker-build tag=${TAG}

      - name: Check if we can deploy
        env:
          REGISTRY_LOGIN_SERVER: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        run: |
          if [[ -n "$REGISTRY_LOGIN_SERVER" ]] && [[ -n "$REGISTRY_USERNAME" ]] && [[ -n "$REGISTRY_PASSWORD" ]] && [[ -n "$DEPLOY_KEY" ]]; then
            echo "CAN_DEPLOY=true" >>$GITHUB_ENV
          fi

      - name: "Login to docker"
        if: env.CAN_DEPLOY == 'true'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Push image
        if: env.CAN_DEPLOY == 'true'
        working-directory: futurenhs-platform/workspace-service
        run: |
          make docker-push tag=${TAG}
          DIGEST="$(docker inspect --format='{{index .RepoDigests 0}}' ${{ secrets.REGISTRY_LOGIN_SERVER }}/workspace-service:${TAG})"
          echo "DIGEST=$DIGEST" >>$GITHUB_ENV

      - name: Clone Deployments repo
        if: env.CAN_DEPLOY == 'true'
        uses: actions/checkout@v2
        with:
          repository: FutureNHS/futurenhs-deployments
          path: futurenhs-deployments
          ssh-key: ${{ secrets.DEPLOY_KEY }}

      - name: Deploy
        if: env.CAN_DEPLOY == 'true'
        run: $GITHUB_WORKSPACE/futurenhs-platform/.github/workflows/deploy-branch.sh workspace-service
